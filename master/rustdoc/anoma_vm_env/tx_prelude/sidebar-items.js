initSidebarItems({"attr":[["transaction","Generate WASM binding for a transaction main entrypoint function."]],"enum":[["Address","An accountâ€™s address"]],"fn":[["encode","Encode a value with borsh"]],"mod":[["address","Implements transparent addresses as described in Accounts Addresses."],["chain","Chain related data types"],["dylib","Dynamic library helpers"],["governance","Files defyining the types used in governance."],["hash","Types for working with 32 bytes hashes."],["ibc","Types that are used in IBC."],["intent","Intent data definitions and transaction and validity-predicate helpers."],["internal","Shared internal types between the host env and guest (wasm)."],["key","Cryptographic keys"],["matchmaker","Matchmaker types"],["nft","Nft types"],["parameters_storage","Parameters storage"],["storage","Storage types"],["storage","governance storage"],["time","Types for dealing with time and durations."],["token","A basic fungible token"],["transaction","Types that are used in transactions."],["treasury_storage","treasury storage"],["validity_predicate","Types that are used in validity predicates."]],"struct":[["Key","A storage key is made of storage key segments [`DbKeySeg`], separated by [`KEY_SEGMENT_SEPARATOR`]."],["Signed","A generic signed data wrapper for Borsh encode-able data."],["SignedTxData","This can be used to sign an arbitrary tx. The signature is produced and verified on the tx data concatenated with the tx code, however the tx code itself is not part of this structure."]],"trait":[["IbcActions","IBC trait to be implemented in integration that can read and write"],["PosRead","Read-only part of the PoS system"],["PosWrite","PoS system trait to be implemented in integration that can read and write PoS data."]]});