initSidebarItems({"enum":[["ParsePublicKeyError",""],["ParseSecretKeyError",""],["ParseSignatureError",""],["PkhFromStringError",""],["SchemeType","Type capturing signature scheme IDs"],["VerifySigError","Represents an error in signature verification"]],"fn":[["get","Get the public key associated with the given address. Panics if not found."],["is_pk_key","Check if the given storage key is a public key. If it is, returns the owner."],["is_protocol_pk_key","Check if the given storage key is a public key. If it is, returns the owner."],["pk_key","Obtain a storage key for user’s public key."],["protocol_pk_key","Obtain a storage key for user’s protocol public key."]],"mod":[["common","Cryptographic keys"],["dkg_session_keys","Elliptic curve keys for the DKG Utilities around the DKG session keys"],["ed25519","Ed25519 keys and related functionality"],["testing","Helpers for testing with keys."]],"struct":[["PublicKeyHash","Ed25519 public key hash"]],"trait":[["PublicKey","Represents a public key"],["RefTo","A value-to-value conversion that consumes the input value."],["SecretKey","Represents a secret key"],["SigScheme","Represents a digital signature scheme. More precisely this trait captures the concepts of public keys, private keys, and signatures as well as the algorithms over these concepts to generate keys, sign messages, and verify signatures."],["Signature","Represents a signature"],["TryFromRef","Simple and safe type conversions that may fail in a controlled way under some circumstances."]]});