initSidebarItems({"enum":[["SlashType","A type of slashsable event."],["ValidatorSetUpdate","An update of the active and inactive validator set."],["ValidatorState","Validator’s state."]],"struct":[["ActiveValidator","Active validator’s consensus key and its voting power."],["BasisPoints","‱ (Parts per ten thousand). This can be multiplied by any type that implements [`Into<u64>`] or [`Into<i128>`]."],["Bond","A bond is validator’s self-bond or a delegation from a regular account to a validator."],["BondId","ID of a bond and/or an unbond."],["Epoch","Epoch identifier. Epochs are identified by consecutive natural numbers."],["GenesisValidator","A genesis validator definition."],["Slash","A slash applied to validator, to punish byzantine behavior by removing their staked tokens at and before the epoch of the slash."],["Unbond","An unbond contains unbonded tokens from a validator’s self-bond or a delegation from a regular account to a validator."],["ValidatorSet","Active and inactive validator sets."],["VotingPower","Voting power is calculated from staked tokens."],["VotingPowerDelta","A change of voting power."],["WeightedValidator","Validator’s address with its voting power."]],"type":[["Bonds","Epoched bond."],["Slashes","Slashes applied to validator, to punish byzantine behavior by removing their staked tokens at and before the epoch of the slash."],["TotalVotingPowers","Epoched total voting power."],["Unbonds","Epoched unbond."],["ValidatorConsensusKeys","Epoched validator’s consensus key."],["ValidatorSets","Epoched validator set."],["ValidatorStates","Epoched validator’s state."],["ValidatorTotalDeltas","Epoched validator’s total deltas."],["ValidatorVotingPowers","Epoched validator’s voting power."]]});