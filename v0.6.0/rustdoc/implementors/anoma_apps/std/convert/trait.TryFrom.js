(function() {var implementors = {};
implementors["anoma_apps"] = [{"text":"impl <a class=\"trait\" href=\"anoma_apps/std/convert/trait.TryFrom.html\" title=\"trait anoma_apps::std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"anoma_apps/cli/args/struct.ExchangeDefinition.html\" title=\"struct anoma_apps::cli::args::ExchangeDefinition\">ExchangeDefinition</a>&gt; for <a class=\"struct\" href=\"anoma/types/intent/struct.Exchange.html\" title=\"struct anoma::types::intent::Exchange\">Exchange</a>","synthetic":false,"types":["anoma::types::intent::Exchange"]},{"text":"impl <a class=\"trait\" href=\"anoma_apps/std/convert/trait.TryFrom.html\" title=\"trait anoma_apps::std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"anoma_apps/proto/services/struct.IntentMessage.html\" title=\"struct anoma_apps::proto::services::IntentMessage\">IntentMessage</a>&gt; for <a class=\"struct\" href=\"anoma_apps/proto/struct.IntentMessage.html\" title=\"struct anoma_apps::proto::IntentMessage\">IntentMessage</a>","synthetic":false,"types":["anoma_apps::proto::types::IntentMessage"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()