initSidebarItems({"enum":[["DecryptedTx","Holds the result of attempting to decrypt a transaction and the data necessary for other validators to verify"],["TxError","Errors relating to decrypting a wrapper tx and its encrypted payload from a Tx type"],["TxType","Struct that classifies that kind of Tx based on the contents of its data."],["WrapperTxErr","Errors relating to decrypting a wrapper tx and its encrypted payload from a Tx type"]],"fn":[["hash_tx","Get the hash of a transaction"],["process_tx","Determines the type of the input Tx"],["verify_decrypted_correctly","Verify that if the encrypted payload was marked “undecryptable”, we should not be able to decrypt it"]],"mod":[["decrypted","txs that contain decrypted payloads or assertions of non-decryptability"],["encrypted","tools for encrypted data"],["governance","txs to manage governance"],["nft","txs to manage nfts"],["pos","Types used for PoS system transactions"],["protocol","transaction protocols made by validators"],["tx_types","Module that includes helper functions for classifying different types of transactions that the ledger must support as well as conversion functions between them."],["wrapper","wrapper txs with encrypted payloads"]],"struct":[["EncryptionKey","An encryption key for txs"],["Fee","A fee is an amount of a specified token"],["GasLimit","Gas limits must be multiples of GAS_LIMIT_RESOLUTION This is done to minimize the amount of information leak from a wrapper tx. The larger the GAS_LIMIT_RESOLUTION, the less info leaked."],["InitAccount","A tx data type to initialize a new established account"],["InitValidator","A tx data type to initialize a new validator account and its staking reward account."],["TxResult","Transaction application result"],["UpdateDkgSessionKey","A data type containing information used to update the DKG session key"],["UpdateVp","A tx data type to update an account’s validity predicate"],["VpsResult","Result of checking a transaction with validity predicates"],["WrapperTx","A transaction with an encrypted payload as well as some non-encrypted metadata for inclusion and / or verification purposes"]],"trait":[["AffineCurve","Affine representation of an elliptic curve point guaranteed to be in the correct prime order subgroup."],["PairingEngine",""]],"type":[["EllipticCurve",""]]});